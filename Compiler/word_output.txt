1 constsy const
2 intsy int
3 ident MAX_NUM
4 assign =
5 intcon 1024
6 semicolon ;
7 intsy int
8 ident factorial
9 lparent (
10 intsy int
11 ident n
12 rparent )
13 lcbrack {
14 ifsy if
15 lparent (
16 ident n
17 leq <=
18 intcon 1
19 rparent )
20 scanfsy return
21 lparent (
22 intcon 1
23 rparent )
24 semicolon ;
25 scanfsy return
26 lparent (
27 ident n
28 mult *
29 ident factorial
30 lparent (
31 ident n
32 minus -
33 intcon 1
34 rparent )
35 rparent )
36 semicolon ;
37 rcbrack }
38 intsy int
39 ident mod
40 lparent (
41 intsy int
42 ident x
43 comma ,
44 intsy int
45 ident y
46 rparent )
47 lcbrack {
48 ident x
49 assign =
50 ident x
51 minus -
52 ident x
53 rdiv /
54 ident y
55 mult *
56 ident y
57 semicolon ;
58 scanfsy return
59 lparent (
60 ident x
61 rparent )
62 semicolon ;
63 rcbrack }
64 voidsy void
65 ident swap
66 lparent (
67 intsy int
68 ident x
69 comma ,
70 intsy int
71 ident y
72 rparent )
73 lcbrack {
74 intsy int
75 ident temp
76 semicolon ;
77 printfsy printf
78 lparent (
79 stringcon  x = 
80 comma ,
81 ident x
82 rparent )
83 semicolon ;
84 printfsy printf
85 lparent (
86 stringcon  y = 
87 comma ,
88 ident y
89 rparent )
90 semicolon ;
91 ident temp
92 assign =
93 ident x
94 semicolon ;
95 ident x
96 assign =
97 ident y
98 semicolon ;
99 ident y
100 assign =
101 ident temp
102 semicolon ;
103 printfsy printf
104 lparent (
105 stringcon  SWAP x = 
106 comma ,
107 ident x
108 rparent )
109 semicolon ;
110 printfsy printf
111 lparent (
112 stringcon  SWAP y = 
113 comma ,
114 ident y
115 rparent )
116 semicolon ;
117 rcbrack }
118 voidsy void
119 ident complete_num
120 lparent (
121 intsy int
122 ident val
123 rparent )
124 lcbrack {
125 intsy int
126 ident k
127 lsbrack [
128 intcon 128
129 rsbrack ]
130 semicolon ;
131 intsy int
132 ident i
133 comma ,
134 ident j
135 comma ,
136 ident n
137 comma ,
138 ident s
139 comma ,
140 ident x1
141 semicolon ;
142 intsy int
143 ident m
144 comma ,
145 ident k2
146 comma ,
147 ident h
148 comma ,
149 ident leap
150 comma ,
151 ident x2
152 semicolon ;
153 intsy int
154 ident a
155 comma ,
156 ident b
157 comma ,
158 ident c
159 semicolon ;
160 ident j
161 assign =
162 ident val
163 semicolon ;
164 switchsy while
165 lparent (
166 ident j
167 lss <
168 ident MAX_NUM
169 rparent )
170 lcbrack {
171 ident n
172 assign =
173 minus -
174 intcon 1
175 semicolon ;
176 ident s
177 assign =
178 ident j
179 semicolon ;
180 ident i
181 assign =
182 intcon 1
183 semicolon ;
184 switchsy while
185 lparent (
186 ident i
187 lss <
188 ident j
189 rparent )
190 lcbrack {
191 ident x1
192 assign =
193 lparent (
194 ident j
195 rdiv /
196 ident i
197 rparent )
198 mult *
199 ident i
200 semicolon ;
201 ifsy if
202 lparent (
203 ident mod
204 lparent (
205 ident j
206 comma ,
207 ident i
208 rparent )
209 eql ==
210 intcon 0
211 rparent )
212 lcbrack {
213 ident n
214 assign =
215 ident n
216 plus +
217 intcon 1
218 semicolon ;
219 ident s
220 assign =
221 ident s
222 minus -
223 ident i
224 semicolon ;
225 ifsy if
226 lparent (
227 ident n
228 geq >=
229 intcon 128
230 rparent )
231 printfsy printf
232 lparent (
233 stringcon  OVERFLOW!          
234 rparent )
235 semicolon ;
236 ifsy if
237 lparent (
238 ident n
239 lss <
240 intcon 128
241 rparent )
242 ident k
243 lsbrack [
244 ident n
245 rsbrack ]
246 assign =
247 ident i
248 semicolon ;
249 rcbrack }
250 ident i
251 assign =
252 ident i
253 plus +
254 intcon 1
255 semicolon ;
256 rcbrack }
257 ifsy if
258 lparent (
259 ident s
260 eql ==
261 intcon 0
262 rparent )
263 lcbrack {
264 printfsy printf
265 lparent (
266 stringcon  complete number: 
267 comma ,
268 ident j
269 rparent )
270 semicolon ;
271 ident i
272 assign =
273 intcon 0
274 semicolon ;
275 switchsy while
276 lparent (
277 ident i
278 leq <=
279 ident n
280 rparent )
281 lcbrack {
282 printfsy printf
283 lparent (
284 stringcon   
285 comma ,
286 ident k
287 lsbrack [
288 ident i
289 rsbrack ]
290 rparent )
291 semicolon ;
292 ident i
293 assign =
294 ident i
295 plus +
296 intcon 1
297 semicolon ;
298 rcbrack }
299 printfsy printf
300 lparent (
301 stringcon           
302 rparent )
303 semicolon ;
304 rcbrack }
305 ident j
306 assign =
307 ident j
308 plus +
309 intcon 1
310 semicolon ;
311 rcbrack }
312 printfsy printf
313 lparent (
314 stringcon  ---------------------------------------------------------------          
315 rparent )
316 semicolon ;
317 ident a
318 assign =
319 intcon 0
320 semicolon ;
321 ident i
322 assign =
323 intcon 0
324 semicolon ;
325 switchsy while
326 lparent (
327 ident i
328 lss <
329 ident MAX_NUM
330 rparent )
331 lcbrack {
332 ident b
333 assign =
334 ident a
335 mult *
336 ident i
337 semicolon ;
338 ident c
339 assign =
340 ident j
341 mult *
342 ident n
343 semicolon ;
344 ident a
345 assign =
346 ident a
347 mult *
348 ident i
349 semicolon ;
350 ident a
351 assign =
352 ident a
353 plus +
354 ident b
355 plus +
356 ident c
357 semicolon ;
358 ident i
359 assign =
360 ident i
361 plus +
362 intcon 1
363 semicolon ;
364 rcbrack }
365 ident b
366 assign =
367 ident a
368 semicolon ;
369 ident i
370 assign =
371 intcon 0
372 semicolon ;
373 switchsy while
374 lparent (
375 ident i
376 lss <
377 ident MAX_NUM
378 rparent )
379 lcbrack {
380 ident b
381 assign =
382 ident b
383 plus +
384 ident i
385 semicolon ;
386 ident i
387 assign =
388 ident i
389 plus +
390 intcon 1
391 semicolon ;
392 rcbrack }
393 printfsy printf
394 lparent (
395 stringcon  b = 
396 comma ,
397 ident b
398 rparent )
399 semicolon ;
400 printfsy printf
401 lparent (
402 stringcon  ---------------------------------------------------------------          
403 rparent )
404 semicolon ;
405 ident h
406 assign =
407 intcon 0
408 semicolon ;
409 ident leap
410 assign =
411 intcon 1
412 semicolon ;
413 ident m
414 assign =
415 intcon 2
416 semicolon ;
417 switchsy while
418 lparent (
419 ident m
420 leq <=
421 ident MAX_NUM
422 rparent )
423 lcbrack {
424 ident k2
425 assign =
426 ident m
427 rdiv /
428 intcon 2
429 semicolon ;
430 ident i
431 assign =
432 intcon 2
433 semicolon ;
434 switchsy while
435 lparent (
436 ident i
437 leq <=
438 ident k2
439 rparent )
440 lcbrack {
441 ident x2
442 assign =
443 lparent (
444 ident m
445 rdiv /
446 ident i
447 rparent )
448 mult *
449 ident i
450 semicolon ;
451 ifsy if
452 lparent (
453 ident mod
454 lparent (
455 ident m
456 comma ,
457 ident i
458 rparent )
459 eql ==
460 intcon 0
461 rparent )
462 lcbrack {
463 ident leap
464 assign =
465 intcon 0
466 semicolon ;
467 rcbrack }
468 ident i
469 assign =
470 ident i
471 plus +
472 intcon 1
473 semicolon ;
474 rcbrack }
475 ifsy if
476 lparent (
477 ident leap
478 eql ==
479 intcon 1
480 rparent )
481 lcbrack {
482 printfsy printf
483 lparent (
484 stringcon  
485 comma ,
486 ident m
487 rparent )
488 semicolon ;
489 ident h
490 assign =
491 ident h
492 plus +
493 intcon 1
494 semicolon ;
495 ident x2
496 assign =
497 lparent (
498 ident h
499 rdiv /
500 intcon 10
501 rparent )
502 mult *
503 intcon 10
504 semicolon ;
505 ifsy if
506 lparent (
507 ident x2
508 eql ==
509 ident h
510 rparent )
511 printfsy printf
512 lparent (
513 stringcon           
514 rparent )
515 semicolon ;
516 rcbrack }
517 ident leap
518 assign =
519 intcon 1
520 semicolon ;
521 ident m
522 assign =
523 ident m
524 plus +
525 intcon 1
526 semicolon ;
527 rcbrack }
528 printfsy printf
529 lparent (
530 stringcon           The total is 
531 comma ,
532 ident h
533 rparent )
534 semicolon ;
535 rcbrack }
536 voidsy void
537 mainsy main
538 lparent (
539 rparent )
540 lcbrack {
541 intsy int
542 ident n
543 semicolon ;
544 ident n
545 assign =
546 ident factorial
547 lparent (
548 intcon 10
549 rparent )
550 semicolon ;
551 printfsy printf
552 lparent (
553 stringcon  10! = 
554 comma ,
555 ident n
556 rparent )
557 semicolon ;
558 ident swap
559 lparent (
560 intcon 5
561 comma ,
562 intcon 10
563 rparent )
564 semicolon ;
565 ident complete_num
566 lparent (
567 intcon 2
568 rparent )
569 semicolon ;
570 rcbrack }
