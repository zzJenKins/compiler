/*
	错误信息搜集及处理程序
*/
#include "Error_Deal.h"

namespace compiler{
	std::string errormsg[55] = {
		"文件读完了,编译结束",	//0
		"整数太大了",	//1
		"字符不能为空",	//2
		"字符结尾应是\'",	//3
		"字符串中出现非法字符,该字符已跳过",	//4
		"字符串未读到双引号就进行了换行操作,该字符串不被记录",	//5
		"!后面必须有=",	//6
		"程序中出现特殊字符",	//7
		"字符定义出现非法字符(违反字符文法)",	//8
		"非零整数以0开头,已进行容错,例如0123取123", //9

		"main函数声明错误",	//10
		"应该有标识符",	//11
		"函数返回值错误(返回类型错误或者无返回值)",	//12
		"缺少\'(\'",	//13
		"缺少\')\'",	//14
		"缺少\'[\'",	//15
		"缺少\']\'",	//16
		"缺少\'{\'",	//17
		"缺少\'}\'",	//18
		"缺少\';\'",	//19
		"缺少\'=\'",	//20
		"if、while后面必须跟条件语句",	//21
		"case后面必须为常量",	//22

		"标识符(变量名 or 常量名 or 函数名)未定义",	//23
		"标识符(变量名 or 常量名 or 函数名)重复定义",	//24
		"数组越界",	//25
		"应该为关键字int 或 char",	//26
		"常量的赋值与声明的类型不符",	//27
		"变量声明格式错误",		//28
		"const声明应该在最前",	//29
		"数组声明格式错误",	//30
		"函数声明格式出错", //31
		"常量声明、变量声明或者语句 首单词出错",//32
		"表达式格式错误", //33
		"应该为有返回值函数调用",	//34
		"缺少while",	//35
		"形参个数与实参个数不符", //36
		"不能对常量赋值",	//37
		"赋值语句格式错误",	//38
		"scanf语句格式错误",	//39
		"printf语句格式错误",	//40
		"return语句格式错误",	//41
		"switch语句错误",	//42
		"case语句格式错误",	//43
		"除数不能为0",	//44
		"形参与实参类型不符",				//45
		"不能对char赋值int类型",			//46
		"case 常量与switch中表达式类型不符",	//47
		"函数定义内部存在错误",	//48
		"数组下标错误(越界或非法表达)",	//49
		"条件格式错误", //50
		"比较运算符左右类型不一致",//51
		"case重复"//52
	};

	std::string fatalmsg[10] = {
		//词法分析
		"程序中字符串太多了,导致字符串表溢出",	//0

		//语法分析
		"符号表tab溢出",		//1
		"分程序表btab溢出", 	//2
		"数组表atab溢出",		//3
		"中间代码表溢出",		//4
		"mips代码表溢出",		//5
		"中间代码优化表溢出"	//6
	};

	//注意error在词法分析和语法分析的跳读问题
	//pos为出错行数
	void error(int n , int pos){
		IsError = true;
		if (n == 17 || n == 45) {
			std::cout << "Warning: " << errormsg[n] << "   line: " << pos << std::endl;
			erroroutFile << "Warning: " << errormsg[n] << "   line: " << pos << std::endl;
		}
		else {
			std::cout << "Error: " << errormsg[n] << "   line: " << pos << std::endl;
			erroroutFile << "Error: " << errormsg[n] << "   line: " << pos << std::endl;
		}
	}

	void fatal(int n, int pos){
		std::cout << "Fatal: " << fatalmsg[n] << "   line: " << pos << std::endl;
		erroroutFile<<"Fatal: "<<fatalmsg[n]<<"   line: "<<pos<<std::endl;
		exit(1);
	}

}
