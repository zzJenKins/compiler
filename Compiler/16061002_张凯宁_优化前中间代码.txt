RET: func_return_value

    int  factorial()
    para  ints  n

factorial_begin_: 
    #0 = n
    bgt  #0, 1, _6_label_
    ret  1

_6_label_: 
    #1 = n
    call  factorial
    #2 = n
    #3 = #2 - 1
    push  #3
    jal  factorial_begin_

call_13_: 
    #4 = *RET
    #5 = #1 * #4
    ret  #5
    int  mod()
    para  ints  x
    para  ints  y

mod_begin_: 
    #6 = x
    #7 = x
    #8 = y
    #9 = #7 / #8
    #10 = y
    #11 = #9 * #10
    #12 = #6 - #11
    x = #12
    #13 = x
    ret  #13
    void  swap()
    para  ints  x
    para  ints  y

swap_begin_: 
    #14 = x
    out   x = , #14
    #15 = y
    out   y = , #15
    #16 = x
    temp = #16
    #17 = y
    x = #17
    #18 = temp
    y = #18
    #19 = x
    out   SWAP x = , #19
    #20 = y
    out   SWAP y = , #20
    ret   
    void  complete_num()
    para  ints  val

complete_num_begin_: 
    #21 = val
    j = #21

_55_label_: 
    #22 = j
    bge  #22, 1024, _128_label_
    #23 = 0 - 1
    n = #23
    #24 = j
    s = #24
    i = 1

_63_label_: 
    #25 = i
    #26 = j
    bge  #25, #26, _104_label_
    #27 = j
    #28 = i
    #29 = #27 / #28
    #30 = i
    #31 = #29 * #30
    x1 = #31
    call  mod
    #32 = j
    push  #32
    #33 = i
    push  #33
    jal  mod_begin_

call_79_: 
    #34 = *RET
    bne  #34, 0, _99_label_
    #35 = n
    #36 = #35 + 1
    n = #36
    #37 = s
    #38 = i
    #39 = #37 - #38
    s = #39
    #40 = n
    blt  #40, 128, _92_label_
    out   OVERFLOW!          ,  

_92_label_: 
    #41 = n
    bge  #41, 128, _98_label_
    #42 = n
    #43 = i
    k[#42] = #43

_98_label_: 

_99_label_: 
    #44 = i
    #45 = #44 + 1
    i = #45
    goto  _63_label_

_104_label_: 
    #46 = s
    bne  #46, 0, _123_label_
    #47 = j
    out   complete number: , #47
    i = 0

_110_label_: 
    #48 = i
    #49 = n
    bgt  #48, #49, _121_label_
    #51 = i
    #50 = k[#51]
    out    , #50
    #52 = i
    #53 = #52 + 1
    i = #53
    goto  _110_label_

_121_label_: 
    out            ,  

_123_label_: 
    #54 = j
    #55 = #54 + 1
    j = #55
    goto  _55_label_

_128_label_: 
    out   ---------------------------------------------------------------          ,  
    a = 0
    i = 0

_132_label_: 
    #56 = i
    bge  #56, 1024, _157_label_
    #57 = a
    #58 = i
    #59 = #57 * #58
    b = #59
    #60 = j
    #61 = n
    #62 = #60 * #61
    c = #62
    #63 = a
    #64 = i
    #65 = #63 * #64
    a = #65
    #66 = a
    #67 = b
    #68 = #66 + #67
    #69 = c
    #70 = #68 + #69
    a = #70
    #71 = i
    #72 = #71 + 1
    i = #72
    goto  _132_label_

_157_label_: 
    #73 = a
    b = #73
    i = 0

_161_label_: 
    #74 = i
    bge  #74, 1024, _172_label_
    #75 = b
    #76 = i
    #77 = #75 + #76
    b = #77
    #78 = i
    #79 = #78 + 1
    i = #79
    goto  _161_label_

_172_label_: 
    #80 = b
    out   b = , #80
    out   ---------------------------------------------------------------          ,  
    h = 0
    leap = 1
    m = 2

_179_label_: 
    #81 = m
    bgt  #81, 1024, _234_label_
    #82 = m
    #83 = #82 / 2
    k2 = #83
    i = 2

_186_label_: 
    #84 = i
    #85 = k2
    bgt  #84, #85, _211_label_
    #86 = m
    #87 = i
    #88 = #86 / #87
    #89 = i
    #90 = #88 * #89
    x2 = #90
    call  mod
    #91 = m
    push  #91
    #92 = i
    push  #92
    jal  mod_begin_

call_202_: 
    #93 = *RET
    bne  #93, 0, _206_label_
    leap = 0

_206_label_: 
    #94 = i
    #95 = #94 + 1
    i = #95
    goto  _186_label_

_211_label_: 
    #96 = leap
    bne  #96, 1, _228_label_
    #97 = m
    out  #97
    #98 = h
    #99 = #98 + 1
    h = #99
    #100 = h
    #101 = #100 / 10
    #102 = #101 * 10
    x2 = #102
    #103 = x2
    #104 = h
    bne  #103, #104, _227_label_
    out            ,  

_227_label_: 

_228_label_: 
    leap = 1
    #105 = m
    #106 = #105 + 1
    m = #106
    goto  _179_label_

_234_label_: 
    #107 = h
    out            The total is , #107
    ret   
    void  main()

main: 
    call  factorial
    push  10
    jal  factorial_begin_

call_243_: 
    #108 = *RET
    n = #108
    #109 = n
    out   10! = , #109
    call  swap
    push  5
    push  10
    jal  swap_begin_

call_252_: 
    call  complete_num
    push  2
    jal  complete_num_begin_

call_256_: 
